{
  "swagger": "2.0",
  "info": {
    "version": "1.3.0 Beta 8",
    "title": "Kasisto API",
    "description": "Kasisto Enterprise API",
    "contact": {
      "name": "Kasisto API team",
      "email": "info@kasisto.com",
      "url": "http://kasisto.com"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Customer"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Bank Locations"
    },
    {
      "name": "Offers"
    },
    {
      "name": "Customer Action"
    },
    {
      "name": "Interaction"
    }
  ],
  "paths": {
    "/token": {
      "post": {
        "x-name": "Token",
        "tags": [
          "Customer"
        ],
        "description": "Gets an access token for a customer.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token_credentials",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/token_credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "token response",
            "schema": {
              "$ref": "#/definitions/token_response"
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/validate_otp": {
      "post": {
        "x-name": "Validate OTP",
        "tags": [
          "Customer"
        ],
        "description": "This service validates a One-Time Password and returns a new user token",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "validate_otp_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/validate_otp_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "token response",
            "schema": {
              "$ref": "#/definitions/token_response"
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "451": {
            "description": "Invalid One-Time Password",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "452": {
            "description": "Expired One-Time Password",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "453": {
            "description": "Too Many One-Time Password Failures",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/customer": {
      "post": {
        "x-name": "Customer",
        "tags": [
          "Customer"
        ],
        "description": "Gets the customer details.", 
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customer_request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "customer response",
            "schema": {
              "$ref": "#/definitions/customer"
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "x-name": "Accounts",
        "tags": [
          "Accounts"
        ],
        "description": "Gets the list of all the customer's accounts.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "accounts_request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accounts_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "accounts response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/account"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "x-name": "Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "Searches the customer's transactions.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction_criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transaction_criteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/transaction"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/bank_locations": {
      "post": {
        "x-name": "Bank Locations",
        "tags": [
          "Bank Locations"
        ],
        "description": "Searches for bank locations.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "bank_locations_criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bank_locations_criteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bank_locations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bank_location"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/offers": {
      "post": {
        "x-name": "Offers",
        "tags": [
          "Offers"
        ],
        "description": "Get customer offers from merchants that are partnered with the bank",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "offers_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/offers_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offers response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/offer"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/payment": {
      "post": {
        "x-name": "Payment",
        "tags": [
          "Payments"
        ],
        "description": "Pays funds to a payee.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "payment_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/payment_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "payment response",
            "schema": {
              "$ref": "#/definitions/payment"
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/transfer": {
      "post": {
        "x-name": "Transfer",
        "tags": [
          "Transfers"
        ],
        "description": "Transfers funds between two accounts of a customer.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "transfer_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/transfer_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transfer response",
            "schema": {
              "$ref": "#/definitions/transfer"
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/customer_action": {
      "post": {
        "x-name": "Customer Action",
        "tags": [
          "Customer Action"
        ],
        "description": "This service is a generic service that allows the customer to submit different type of requests.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customer_action_request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_action_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer action response",
            "schema": {
              "$ref": "#/definitions/customer_action_response"
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "450": {
            "description": "One-Time Password is required",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/payees": {
      "post": {
        "x-name": "Payees",
        "tags": [
          "Payments"
        ],
        "description": "Gets the list of payees for a user.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "payees_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/payees_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "payees response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/payee"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "x-name": "Categories",
        "tags": [
          "Transactions"
        ],
        "description": "Get transaction categories",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "categories_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/categories_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "categories response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/category"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/merchants": {
      "post": {
        "x-name": "Merchants",
        "tags": [
          "Transactions"
        ],
        "description": "Get the list of merchants for this user.",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchants_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchants_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "merchants response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/merchant"
              }
            },
            "headers": {
              "token": {
                "description": "Valid auth token for subsequent requests if using SSO tokens",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    },
    "/interaction": {
      "post": {
        "x-name": "Interaction",
        "tags": [
          "Interaction"
        ],
        "description": "This service receives the user interaction transcripts as they occur. (Only available from 2.0.1 onward.)",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Date",
            "in": "header",
            "required": true,
            "type": "string",
            "format":"date-time",
            "description": "The date and time that the message was sent (in HTTP-date format as defined by RFC 7231)"
          },
          {
            "name": "request_id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interaction_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/interaction_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded"
          },
          "401": {
            "description": "Authentication Failed",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "403": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/error_response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error_response": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "otp_details": {
          "type": "string"
        },
        "display_message_id": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "merchants_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "interaction_request": {
      "type": "object",
      "properties": {
        "interaction_type":{
          "type": "string",
          "enum": [
              "USER_INPUT",
              "PUSH_MESSAGE",
              "LIVE_CHAT_OPTION_DISPLAYED",
              "LOGOUT",
              "ENTER_TOKEN"
          ]
        },
        "application":{
            "type":"object",
          "$ref": "#/definitions/application"
        },
        "user":{
            "type":"object",
          "$ref": "#/definitions/user"
        },
        "platform":{
            "type":"object",
          "$ref": "#/definitions/platform"
        },
        "device":{
            "type":"object",
          "$ref": "#/definitions/device"
        },
        "segment_names":{
          "type": "array",
          "items":{
            "type": "string"
          }
        },
        "request_text":{
          "type": "string"
        },
        "response":{
          "type": "object",
          "$ref":"#/definitions/interaction_request_response"
        },
        "intent":{
          "type": "string"
        },
        "sub_intent":{
          "type": "string"
        },
        "elapsed_time":{
          "type": "integer",
          "format": "int32"
        },
        "date":{
          "type": "string",
          "format": "date-time"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "payees_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "categories_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "transfer_request": {
      "type": "object",
      "required": [
        "source_account_id",
        "dest_account_id",
        "amount"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "source_account_id": {
          "description": "source account of transfer",
          "type": "string"
        },
        "dest_account_id": {
          "description": "destination account of transfer",
          "type": "string"
        },
        "amount": {
          "description": "amount of transfer",
          "type": "number",
          "format": "float"
        },
        "currency_code": {
          "description": "currency of amounts (USD, etc.)",
          "type": "string"
        },
        "date": {
          "description": "date of transfer",
          "type": "string",
          "format": "date-time"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "payment_request": {
      "type": "object",
      "required": [
        "source_account_id",
        "payee_id",
        "amount"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "source_account_id": {
          "description": "source account of payment",
          "type": "string"
        },
        "payee_id": {
          "description": "destination payee of payment",
          "type": "string"
        },
        "amount": {
          "description": "amount of transfer",
          "type": "number",
          "format": "float"
        },
        "currency_code": {
          "description": "currency of amounts (USD, etc.)",
          "type": "string"
        },
        "date": {
          "description": "date of payment",
          "type": "string",
          "format": "date-time"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "accounts_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "customer_request": {
      "type": "object",
      "properties": {
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "customer_action_request": {
      "type": "object",
      "required": [
        "action",
        "parameters"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "parameters": {
          "description": "List of action parameteres",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "customer_action_response": {
      "type": "object",
      "properties": {
        "reference_id": {
          "type": "string"
        },
        "reference_number": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "processed",
            "pending",
            "cancelled",
            "failed"
          ]
        },
        "display_message_id": {
          "type": "string"
        },
        "meta": {
          "description": "List of action parameteres",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "validate_otp_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "token_credentials": {
      "type": "object",
      "properties": {
        "meta": {
          "description": "Key value pairs acting as auth credentials to obtain the token",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "token_response": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "refresh_token" : {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "transaction_criteria": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "account_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "bank_locations_criteria": {
      "type": "object",
      "properties": {
        "location": {
            "type":"object",
            "$ref": "#/definitions/location"
        }
      }
    },
    "name_value_pair": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name of the field",
          "type": "string"
        },
        "value": {
          "description": "Value of the field",
          "type": "string"
        }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Street address",
          "type": "string"
        },
        "city": {
          "description": "City/Village",
          "type": "string"
        },
        "state": {
          "description": "State / Area / Region",
          "type": "string"
        },
        "zip": {
          "description": "Postal code",
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "type": "string"
        },
        "coordinates": {
            "type":"object",
          "$ref": "#/definitions/coordinates"
        }
      }
    },
    "application":{
        "type":"object",
        "properties":{
            "application_id":{
                "type":"string"
            },
            "locale":{
                "type":"string"
            },
            "environment":{
                "type":"string"
            },
            "build_id":{
                "type":"string"
            },
            "package_id":{
                "type":"string"
            }
        }
    },
    "user":{
        "type":"object",
        "properties":{
           "user_id":{
                "type":"string"
           }, 
           "session_id":{
                "type":"string"
           } 
        }
    },
    "interaction_request_response":{
        "type":"object",
        "properties":{
            "message_contents":{
              "type": "array",
              "items": {
                "$ref": "#/definitions/message_content"
              }
            },   
            "quick_replies":{
              "type": "array",
              "items": {
                "$ref": "#/definitions/quick_reply"
              }
            },   
            "alternative_questions":{
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/alternative_question"
                  }
            }   
        }
    },
    "message_content":
      {
        "type":"object",
        "properties":{
            "type":{
                "type":"string",
                  "enum": [
                      "TEXT",
                      "BUTTON",
                      "MEDIUM",
                      "CONTAINER",
                      "EVENT",
                      "CARD"
                  ]
            },
            "payload":{
                "type":"object"
            },
            "segment_name":
            {
                "type":"string"
            }
        }
      },
    "quick_reply":
      {
        "type":"object",
        "properties":{
            "type":{
                "type":"string",
                  "enum": [
                      "TEXT",
                      "LOCATION"
                  ]
            },
            "payload":{
                "type":"string"
            },
            "display_text":{
                "type":"string"
            }
        }
      },
    "alternative_question":
      {
        "type":"object",
        "properties":{
            "question_id":{
                "type":"string"
            },
            "question":{
                "type":"string"
            }
        }
      },
    "platform":{
        "type":"object",
        "properties":{
            "name":{
                "type":"string"
            },   
            "conversation_id":{
                "type":"string"
            },   
            "user_id":{
                "type":"string"
            }   

        }
    },
    "device": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "coordinates": {
      "type": "object",
      "required": [
        "lat",
        "long"
      ],
      "properties": {
        "lat": {
          "description": "Latitude of merchant location",
          "type": "number",
          "format": "float"
        },
        "long": {
          "description": "Longitude of merchant location",
          "type": "number",
          "format": "float"
        }
      }
    },
    "customer": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "mobile_number": {
          "type": "string"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "transfer": {
      "type": "object",
      "properties": {
        "transfer_id": {
          "type": "string"
        },
        "reference_number": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "processed",
            "pending",
            "cancelled",
            "failed"
          ]
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "payment": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "string"
        },
        "reference_number": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "processed",
            "pending",
            "cancelled",
            "failed"
          ]
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "account": {
      "type": "object",
      "properties": {
        "account_id": {
          "description": "internal ID used by bank for transaction search API",
          "type": "string"
        },
        "account_type": {
          "description": "checking,savings,loan,credit_card, etc.",
          "type": "string",
          "enum": [
            "cd",
            "checking",
            "credit_card",
            "heloc",
            "ira",
            "investment",
            "loc",
            "loan",
            "money_market",
            "mortgage",
            "savings"
          ]
        },
        "account_number": {
          "description": "number used by kasisto - may be masked",
          "type": "string"
        },
        "account_name": {
          "description": "account name",
          "type": "string"
        },
        "account_nickname": {
          "description": "account nickname",
          "type": "string"
        },
        "account_status": {
          "description": "Status of the account",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "account_image": {
          "description": "account image",
          "type": "string"
        },
        "current_balance": {
          "type": "number",
          "format": "float"
        },
        "available_balance": {
          "type": "number",
          "format": "float"
        },
        "fcy_currency_code": {
          "description": "account name",
          "type": "string"
        },
        "fcy_current_balance": {
          "type": "number",
          "format": "float"
        },
        "fcy_available_balance": {
          "type": "number",
          "format": "float"
        },
        "credit_limit": {
          "description": "(for credit_card only)",
          "type": "number",
          "format": "float"
        },
        "interest_rate": {
          "description": "Interest rate if applicable",
          "type": "number",
          "format": "float"
        },
        "available_credit": {
          "description": "(for credit_card only)",
          "type": "number",
          "format": "float"
        },
        "statement_date": {
          "description": "(for credit_card and loan)",
          "type": "string",
          "format": "date"
        },
        "payment_due_amount": {
          "description": "(for credit_card and loan)",
          "type": "number",
          "format": "float"
        },
        "payment_due_date": {
          "description": "(for credit_card and loan)",
          "type": "string",
          "format": "date"
        },
        "minimum_payment_due_amount": {
          "description": "(for credit_card and loan)",
          "type": "number",
          "format": "float"
        },
        "reward_points": {
          "description": "Number of reward points",
          "type": "integer",
          "format": "int32"
        },
        "reward_miles": {
          "description": "Number of miles",
          "type": "integer",
          "format": "int32"
        },
        "reward_cashback": {
          "description": "Cashback reward",
          "type": "number",
          "format": "float"
        },
        "can_transfer_to": {
          "description": "True if account is a valid transfer destination",
          "type": "boolean"
        },
        "can_transfer_from": {
          "description": "True if account is eligible to fee waiver",
          "type": "boolean"
        },
        "can_pay_payee": {
          "description": "True if account is a valid pay to payee source",
          "type": "boolean"
        },
        "can_waive_fee": {
          "description": "True if fees for account can be waived",
          "type": "boolean"
        },
        "expiration_date": {
          "description": "Expiration date of the account",
          "type": "string",
          "format": "date"
        },
        "available_cash_advance_limit": {
          "description": "Cash advance limit for credit cards",
          "type": "number",
          "format": "float"
        },
        "original_tenor": {
          "description": "Original tenor period",
          "type": "number",
          "format": "int32"
        },
        "original_tenor_unit": {
          "description": "Unit of the tenor period",
          "type": "string",
          "enum": [
            "year",
            "month",
            "day"
          ]
        },
        "maturity_date": {
          "description": "Maturity date of account",
          "type": "string",
          "format": "date"
        },
        "annual_fee": {
          "description": "Annual fee for the account",
          "type": "number",
          "format": "float"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "transaction": {
      "type": "object",
      "properties": {
        "account_id": {
          "description": "ID of account transaction is from",
          "type": "string"
        },
        "transaction_id": {
          "description": "ID of this transaction",
          "type": "string"
        },
        "title": {
          "description": "Short description of transaction",
          "type": "string"
        },
        "description": {
          "description": "Description of transaction",
          "type": "string"
        },
        "transaction_type": {
          "description": "Type of transaction",
          "type": "string",
          "enum": [
            "credit",
            "debit"
          ]
        },
        "amount": {
          "description": "Amount of transaction (can be positive or negative)",
          "type": "number",
          "format": "float"
        },
        "currency_code": {
          "description": "Currency type of the amount",
          "type": "string"
        },
        "categories": {
          "description": "Category of transaction if provided",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "merchant": {
          "description": "Merchant or vendor of transaction if provided",
          "type": "string"
        },
        "payee": {
          "description": "Payee or biller of transaction if provided",
          "type": "string"
        },
        "location": {
            "type":"object",
          "$ref": "#/definitions/location"
        },
        "status": {
          "description": "Status of transaction",
          "type": "string",
          "enum": [
            "posted",
            "pending",
            "cancelled"
          ]
        },
        "check_number": {
          "description": "Check number of transaction is a check",
          "type": "integer",
          "format": "int32"
        },
        "transaction_date": {
          "description": "Date of transaction",
          "type": "string",
          "format": "date-time"
        },
        "post_date": {
          "description": "Date of transaction",
          "type": "string",
          "format": "date-time"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "bank_location": {
      "type": "object",
      "properties": {
        "location_id": {
          "description": "The id of this",
          "type": "string"
        },
        "location_type": {
          "description": "The type of point of interest it is",
          "type": "string",
          "enum": [
            "atm",
            "bank"
          ]
        },
        "location_name": {
          "description": "The name of this",
          "type": "string"
        },
        "location_url": {
          "description": "The url of this",
          "type": "string"
        },
        "location": {
            "type":"object",
          "$ref": "#/definitions/location"
        },
        "phone_number": {
          "description": "The phone number of this location",
          "type": "string"
        },
        "services": {
          "description": "Array of languages used at the ATM",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "opening_hours": {
          "description": "Array of opening hours description",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "opening_days": {
          "description": "Array of opening days",
          "type": "string",
          "items": {
            "type": "string",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ]
          }
        },
        "languages": {
          "description": "Array of languages used at the POI",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "merchant": {
      "type": "object",
      "properties": {
        "merchant_id": {
          "description": "ID of merchant",
          "type": "string"
        },
        "name": {
          "description": "Name of merchant",
          "type": "string"
        },
        "alias": {
          "description": "Optional alternative names for this merchant",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "category": {
      "type": "object",
      "properties": {
        "category_id": {
          "description": "ID of transaction category",
          "type": "string"
        },
        "name": {
          "description": "Name of transaction category",
          "type": "string"
        },
        "alias": {
          "description": "Optional alternative names for this category",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "payee": {
      "type": "object",
      "properties": {
        "payee_id": {
          "description": "ID of payee",
          "type": "string"
        },
        "name": {
          "description": "Name of payee",
          "type": "string"
        },
        "alias": {
          "description": "Optional alternative names for this payee",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        },
        "category": {
          "description": "Category that the payee belongs to",
          "type": "string",
          "enum": [
            "payee",
            "biller"
          ]
        }
      }
    },
    "offers_request": {
      "type": "object",
      "properties": {
        "user_id": {
          "description": "_ `user_id` of the customer",
          "type": "string"
        },
        "location": {
          "description": "Location of customer at time of request",
          "$ref": "#/definitions/location"
        },
        "meta": {
          "description": "Optional data if needed for application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/name_value_pair"
          }
        }
      }
    },
    "offer": {
      "type": "object",
      "properties": {
        "offer_id": {
          "description": "Unique identifier for the offer",
          "type": "string"
        },
        "offer_type": {
          "description": "Type of offer(rewards, benefits, etc)",
          "type": "string"
        },
        "summary": {
          "description": "Summary text of the offer",
          "type": "string",
          "example": "10% off all purchases"
        },
        "image_url": {
          "description": "URI of image that will be displayed in bot UI for promotions",
          "type": "string",
          "format": "uri"
        },
        "merchant": {
          "description": "The name of merchant.",
          "type": "string",
          "example": "ABC Restaurant"
        },
        "location_name": {
          "description": "The name of the location.",
          "type": "string",
          "example": "ABC Restaurant Nathan Road - Full Win Commercial Center"
        },
        "location_contact_number": {
          "description": "Contact number of the location",
          "type": "string"
        },
        "location_email": {
          "description": "Email contact of the location",
          "type": "string"
        },
        "offer_url": {
          "description": "URI of where the customer can find out more information about the offer",
          "type": "string",
          "format": "uri"
        },
        "location": {
          "description": "Location where offer can be redeemed.",
          "$ref": "#/definitions/location"
        },
        "categories": {
          "description": "List of category ids that are relevant to offer",
          "type": "array",
          "items": {
              "type": "string"
          }
        },
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        },
        "details": {
          "description": "Contents to be displayed (Offer details, TnCs and etc.)",
          "type": "array",
          "items": {
              "type": "string"
          }
        }
      },
      "required": [
        "offer_id",
        "summary",
        "merchant",
        "location",
        "start_date",
        "end_date",
        "details"
      ]
    }
  }
}
